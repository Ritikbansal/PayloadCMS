/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    'contact-submissions': ContactSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: 'en' | 'es' | 'fr' | 'zh-CN' | 'ru-RU';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  roles?: ('admin' | 'editor' | 'user')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  slug: string;
  layout?:
    | (
        | {
            badge?: string | null;
            title: string;
            highlight?: string | null;
            subheading?: string | null;
            primaryCta: {
              text: string;
              link: string;
            };
            secondaryCta: {
              text: string;
              link: string;
            };
            stats?:
              | {
                  value: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            heading?: string | null;
            subheading?: string | null;
            features?:
              | {
                  icon: 'zap' | 'shield' | 'users' | 'barChart3' | 'lock' | 'smartphone';
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'featureList';
          }
        | {
            heading: string;
            subheading?: string | null;
            trustedByHeading?: string | null;
            testimonials: {
              name: string;
              role?: string | null;
              avatar?: (string | null) | Media;
              content: string;
              rating?: number | null;
              id?: string | null;
            }[];
            trustedBy?:
              | {
                  company?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testimonial';
          }
        | {
            heading: string;
            subheading?: string | null;
            benefits?:
              | {
                  text: string;
                  id?: string | null;
                }[]
              | null;
            primaryButton?: {
              text?: string | null;
              link?: string | null;
            };
            secondaryButton?: {
              text?: string | null;
              link?: string | null;
            };
            trustBadge?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            heading?: string | null;
            subheading?: string | null;
            features?:
              | {
                  icon?: string | null;
                  title?: string | null;
                  description?: string | null;
                  badge?: string | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productFeatures';
          }
        | {
            badge?: string | null;
            title: string;
            highlight?: string | null;
            subheading?: string | null;
            primaryCta?: {
              text?: string | null;
              link?: string | null;
            };
            secondaryCta?: {
              text?: string | null;
              link?: string | null;
            };
            stats?:
              | {
                  value: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productHero';
          }
        | {
            heading?: string | null;
            subheading?: string | null;
            plans?:
              | {
                  name: string;
                  price?: string | null;
                  period?: string | null;
                  description?: string | null;
                  features?:
                    | {
                        item?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  popular?: boolean | null;
                  id?: string | null;
                }[]
              | null;
            bottomNote?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productPricing';
          }
        | {
            sections?:
              | {
                  badge?: string | null;
                  title: string;
                  description?: string | null;
                  list?:
                    | {
                        item?: string | null;
                        id?: string | null;
                      }[]
                    | null;
                  cta?: {
                    text?: string | null;
                    link?: string | null;
                  };
                  image?: (string | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productShowcase';
          }
        | {
            companyLinks?:
              | {
                  label: string;
                  url: string;
                  id?: string | null;
                }[]
              | null;
            productLinks?:
              | {
                  label: string;
                  url: string;
                  id?: string | null;
                }[]
              | null;
            supportLinks?:
              | {
                  label: string;
                  url: string;
                  id?: string | null;
                }[]
              | null;
            legalLinks?:
              | {
                  label: string;
                  url: string;
                  id?: string | null;
                }[]
              | null;
            socialLinks?:
              | {
                  platform: 'linkedin';
                  url: string;
                  id?: string | null;
                }[]
              | null;
            copyright?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'footer';
          }
      )[]
    | null;
  seo: {
    title: string;
    description: string;
    canonicalURL?: string | null;
    ogTitle?: string | null;
    ogDescription?: string | null;
    twitterCard?: ('summary' | 'summary_large_image') | null;
    twitterTitle?: string | null;
    twitterDescription?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: string;
  name: string;
  email: string;
  message: string;
  seo: {
    title: string;
    description: string;
    canonicalURL?: string | null;
    ogTitle?: string | null;
    ogDescription?: string | null;
    twitterCard?: ('summary' | 'summary_large_image') | null;
    twitterTitle?: string | null;
    twitterDescription?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: string | ContactSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              badge?: T;
              title?: T;
              highlight?: T;
              subheading?: T;
              primaryCta?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              secondaryCta?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              stats?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        featureList?:
          | T
          | {
              heading?: T;
              subheading?: T;
              features?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        testimonial?:
          | T
          | {
              heading?: T;
              subheading?: T;
              trustedByHeading?: T;
              testimonials?:
                | T
                | {
                    name?: T;
                    role?: T;
                    avatar?: T;
                    content?: T;
                    rating?: T;
                    id?: T;
                  };
              trustedBy?:
                | T
                | {
                    company?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              heading?: T;
              subheading?: T;
              benefits?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              primaryButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              secondaryButton?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              trustBadge?: T;
              id?: T;
              blockName?: T;
            };
        productFeatures?:
          | T
          | {
              heading?: T;
              subheading?: T;
              features?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    badge?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        productHero?:
          | T
          | {
              badge?: T;
              title?: T;
              highlight?: T;
              subheading?: T;
              primaryCta?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              secondaryCta?:
                | T
                | {
                    text?: T;
                    link?: T;
                  };
              stats?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        productPricing?:
          | T
          | {
              heading?: T;
              subheading?: T;
              plans?:
                | T
                | {
                    name?: T;
                    price?: T;
                    period?: T;
                    description?: T;
                    features?:
                      | T
                      | {
                          item?: T;
                          id?: T;
                        };
                    popular?: T;
                    id?: T;
                  };
              bottomNote?: T;
              id?: T;
              blockName?: T;
            };
        productShowcase?:
          | T
          | {
              sections?:
                | T
                | {
                    badge?: T;
                    title?: T;
                    description?: T;
                    list?:
                      | T
                      | {
                          item?: T;
                          id?: T;
                        };
                    cta?:
                      | T
                      | {
                          text?: T;
                          link?: T;
                        };
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        footer?:
          | T
          | {
              companyLinks?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              productLinks?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              supportLinks?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              legalLinks?:
                | T
                | {
                    label?: T;
                    url?: T;
                    id?: T;
                  };
              socialLinks?:
                | T
                | {
                    platform?: T;
                    url?: T;
                    id?: T;
                  };
              copyright?: T;
              id?: T;
              blockName?: T;
            };
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        canonicalURL?: T;
        ogTitle?: T;
        ogDescription?: T;
        twitterCard?: T;
        twitterTitle?: T;
        twitterDescription?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  message?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        canonicalURL?: T;
        ogTitle?: T;
        ogDescription?: T;
        twitterCard?: T;
        twitterTitle?: T;
        twitterDescription?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}